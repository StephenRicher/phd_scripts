#!/bin/bash

#SBATCH --account=ba-fs6sdb
#SBATCH --job-name=bowtie2_align_%j
#SBATCH --output=/home/u/sr467/scratch/projects/HiC/job_logs/bowtie2_align_%j.out
#SBATCH --error=/home/u/sr467/scratch/projects/HiC/job_logs/bowtie2_align_%j.err
#SBATCH --partition=batch
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=16
#SBATCH --time=24:00:00
#SBATCH --workdir=/home/u/sr467/scratch/projects/HiC/truncated_data
#SBATCH --mail-type=ALL
#SBATCH --mail-user=sr467@bath.ac.uk

module purge
module load slurm
module load openmpi/intel
module load samtools/1.9
module load bowtie2
module load python3

# Define sample name
sample="${1}"

# All other arguments are files to process.
shift

# Bowtie2 index
genome_index=/home/u/sr467/scratch/projects/genomes/GRCh38/bt2_index/GRCh38

# Digest file from hictools digest
genome_digest=/home/u/sr467/scratch/projects/genomes/GRCh38/GRCh38_Mbo1-digest.txt.gz

# Define cores
threads=${SLURM_CPUS_PER_TASK}

hictools=/home/u/sr467/scratch/scripts/hictools/hictools/hictools.py

alignment_stats=alignment_stats.txt

if [[ ! -f "${alignment_stats}" ]]; then
    printf 'sample\ttotal_mapped_pairs\tboth_pairs_unmapped\t' >> "${alignment_stats}"
	printf 'r1_map_r2_unmapped\tr2_map_r1_unmapped\tduplicate_pairs\t' >> "${alignment_stats}"
	printf 'quality_filtered_pairs\ttotal_pairs_retained\n' >> "${alignment_stats}"
fi

# File for intermediate logfile
intermediate="${sample}".fixmate.bam

mpirun "${hictools}" map \
	--index "${genome_index}"  \
	--sample "${sample}" \
	--intermediate "${intermediate}" \
	--log "${sample}".bowtie2.logfile \
	--threads "${threads}" "${@}" \
	2> "${sample}".alignment_stats.txt \
| "${hictools}" process \
	--digest "${genome_digest}" \
	--log "${sample}".process.logfile \
	> "${sample}".proc.bam

total_pairs=$(grep -m 1 'reads; of these:' "${sample}".alignment_stats.txt | awk '{print $1}')
both_pair_unmapped=$(samtools view -cf 12 "${intermediate}")
r1_map_r2_unmap=$(samtools view -c -f 72 -F 4 "${intermediate}")
r2_map_r1_unmap=$(samtools view -c -f 136 -F 4 "${intermediate}")
unmapped_pairs=$(( both_pair_unmapped + r1_map_r2_ummap + r2_map_r1_unmap ))
duplicate_pairs=$(grep -m 1 'DUPLICATE PAIR' "${sample}".alignment_stats.txt | awk '{print $3/2}')
total_kept_pairs=$(samtools view -cf 64 "${sample}".proc.bam)
qual_filtered_pairs=$(( total_pairs - total_kept_pairs - duplicate_pairs - unmapped_pairs ))

printf '%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n' \
	"${sample}" "${total_pairs}" "${both_pair_unmapped}" \
	"${r1_map_r2_unmap}" "${r2_map_r1_unmap}" \
	"${duplicate_pairs}" "${qual_filtered_pairs}" \
	"${total_kept_pairs}" >> "${alignment_stats}"
