#!/usr/bin/env bash

# Activate extended globbing
shopt -s extglob

region="GNG12_AS1_DIRAS3"
location="1:67432288-68602987" # GNG12 position

track_config="/home/stephen/x_am/RC-BB1219/stephen/projects/hic_analysis/hicexplorer_tracks/hic_track_genome_split.ini"
#track_config="/home/stephen/x_am/RC-BB1219/stephen/projects/hic_analysis/hicexplorer_tracks/hic_track.ini"
#track_config_replicate="/home/stephen/x_am/RC-BB1219/stephen/projects/hic_analysis/hicexplorer_tracks/hic_track_replicate.ini"

nbin=25

# Remove sample list array and remove any excluded
samples=("HB2_CL4_G1" "HB2_CL4_G2" "HB2_WT_G1" "HB2_WT_G2" "MCF7_G1" "MCF7_G2")
#samples=("HB2_CL4" "HB2_WT" "MCF7")

# Check hic interaction density for each replicate of each sample. If any are 0 then remove from sample list
delete=()
for sample in "${samples[@]}"; do
  for replicate in 1 2; do
    info=( $(hicInfo --matrices ${sample}-${replicate}*1000.h5) )
    matrix_size=${info[13]/,/}
    matrix_sum=${info[19]/,/}
    matrix_density=$(echo "scale=3; ${matrix_sum} / (${matrix_size} * ${matrix_size})" | bc)
    if [[ "${matrix_density}" == "0" ]]; then
      echo "Removing "${sample}" from analysis due to insufficient interactions"
      delete+=("${sample}")
    fi
  done
done

for target in "${delete[@]}"; do
  for i in "${!samples[@]}"; do
    if [[ ${samples[i]} = "${target}" ]]; then
      unset 'samples[i]'
    fi
  done
done

# Add regex pattern to end of samples array and expand variable to obtain relevant matrices to process.
matrices=( ${samples[@]/%/*@(1000|rf).h5} )

# Create array with modified matrix filenames
matrices_norm=("${matrices[@]/.h5/-norm.h5}")

# Begin by normalizing read count of all unprocessed matrices
hicNormalize --matrices "${matrices[@]}" --outFileName "${matrices_norm[@]}" --normalize smallest

# Merge matrices to nkb bin size
for bin in ${nbin} 10; do
   for matrix in *${region}*1000-norm.h5; do
     hicMergeMatrixBins --matrix ${matrix} --numBins ${bin} --outFileName ${matrix%1000-norm.h5}${bin}000-norm.h5
   done
done

# Plot correlation of uncorrected matrices at restriction fragment resolution
hicCorrelate --matrices *rf-norm.h5 --outFileNameHeatmap ${region}-rf-heatmap.png --outFileNameScatter ${region}-rf-scatter.png --threads 6 --method pearson
hicCorrelate --matrices *${nbin}000-norm.h5 --outFileNameHeatmap ${region}-${nbin}000-heatmap.png --outFileNameScatter ${region}-${nbin}000-scatter.png --threads 6 --method pearson

# Merge matrices across replicates
for sample in "${samples[@]}"; do
   for bin in ${nbin} 10; do
      hicSumMatrices --matrices ${sample}*${region}*${bin}000-norm.h5 --outFileName ${sample}-${region}-${bin}000-norm_sum.h5
   done
   hicSumMatrices --matrices ${sample}*${region}*rf-norm.h5 --outFileName ${sample}-${region}-rf-norm_sum.h5
done

# Correct all matrixes (except the initial unmerged 1000bp bin matrices)
mkdir diagnostic_plots
for matrix in *${region}*{${nbin}000,rf,10000}-norm*(_sum).h5; do
  hicCorrectMatrix diagnostic_plot --matrix ${matrix} -o diagnostic_plots/${matrix%.h5}_diagnostic.png 2> diagnostic_temp.txt
  lower_threshold=$(grep "mad threshold" diagnostic_temp.txt | awk '{print $NF}')
  hicCorrectMatrix correct --matrix ${matrix} --filterThreshold ${lower_threshold} 4 --outFileName ${matrix%.h5}_correct.h5
  rm diagnostic_temp.txt

done

mkdir viewpoint
ref="1:67831302-67832302"
start_end=${ref/*:/}
length=200000
view_region=${ref/:*/}:$((${start_end/-*/}-${length}))-$((${start_end/*-/}+${length}))

hicPlotViewpoint --matrix *${region}*${nbin}000-norm_sum_correct.h5 --region ${view_region} --referencePoint ${ref} --interactionOutFileName viewpoint/${region}-${nbin}000.bed --outFileName viewpoint/${region}-${nbin}000.png --dpi 300
hicPlotViewpoint --matrix *${region}*10000-norm_sum_correct.h5 --region ${view_region} --referencePoint ${ref} --interactionOutFileName viewpoint/${region}-10000.bed --outFileName viewpoint/${region}-10000.png --dpi 300
hicPlotViewpoint --matrix *${region}*rf-norm_sum_correct.h5 --region ${view_region} --referencePoint ${ref} --interactionOutFileName viewpoint/${region}-rf.bed --outFileName viewpoint/${region}-rf.png --dpi 300


# Compare all corrected merged matrices with each other
mkdir matrix_comparison
for matrix1 in *${region}*${nbin}000-norm_sum_correct.h5; do
  for matrix2 in *${region}*${nbin}000-norm_sum_correct.h5; do
    if [ "${matrix1}" != "${matrix2}" ]; then
      hicCompareMatrices --matrices ${matrix1} ${matrix2} \
                         --outFileName matrix_comparison/${matrix1/-norm*}_vs_${matrix2/-norm*}_log2.h5 \
                         --operation log2ratio
      hicPlotMatrix --matrix matrix_comparison/${matrix1/-norm*}_vs_${matrix2/-norm*}_log2.h5 \
                    --outFileName matrix_comparison/${matrix1/-norm*}_vs_${matrix2/-norm*}_log2.png \
                    --clearMaskedBins --region ${location} --dpi 300 \
                    --title ${matrix1/-norm*}_vs_${matrix2/-norm*}_log2 --vMin -4 --vMax 4
    fi
  done
done

# Perform loop detection on unmerged and summed HiC matrices and plot. If no loops detected then run without the loops
mkdir hic_plots

# Define vMax for standardised colour scales in hicPlots - different vMax for summed and not summed matrices
vMax_sum=$(hicInfo --matrices *${region}*${nbin}000-norm_sum_correct.h5 | grep Maximum | cut -d ':' -f 2 | sort -r | head -n 1)
vMax_not_sum=$(hicInfo --matrices *${region}*${nbin}000-norm_correct.h5 | grep Maximum | cut -d ':' -f 2 | sort -r | head -n 1)

for matrix in *${region}*@(rf|${nbin}000|10000)-norm_?(sum_)correct.h5; do
  hicDetectLoops --matrix ${matrix} -o ${matrix/.h5}_loops.bedgraph \
                 --maxLoopDistance 2000000 --windowSize 10 --peakWidth 6 \
                 --pValuePreselection 0.05 --pValue 0.5 --peakInteractionsThreshold 20

  if [[ "${matrix}" == *"_sum_"* ]]; then
    vMax=${vMax_sum}
  else
    vMax=${vMax_not_sum}
  fi

  if [ -f ${matrix/.h5}_loops.bedgraph ]; then
    hicPlotMatrix --matrix ${matrix} --outFileName hic_plots/${matrix/.h5}.png \
                --log1p --region ${location} --loops ${matrix/.h5}_loops.bedgraph \
                --title ${matrix/.h5} --dpi 300 --vMin 1 --vMax ${vMax}
  else
     hicPlotMatrix --matrix ${matrix} --outFileName hic_plots/${matrix/.h5}.png \
                --log1p --region ${location} \
                --title ${matrix/.h5} --dpi 300 --vMin 1 --vMax ${vMax}
  fi
done

# Merge HiC plots
for bin in rf ${nbin}000 10000; do
   montage hic_plots/*${bin}-norm_correct.png -geometry 1200x1200+1+1 -tile 2x hic_plots/${region}_${bin}_hic_plots.png
   montage hic_plots/*${bin}-norm_sum_correct.png -geometry 1200x1200+1+1 -tile x1 hic_plots/${region}-${bin}-sum_hic_plots.png
done

mkdir tads
mkdir tad_plots
for res in ${nbin}000 rf ; do
   {
   for delta in 0.001 0.005 0.01 0.05; do
      for threshold in 0.001 0.005 0.01 0.05; do

         # Detect TADS from both summed and unsummed restriction fragment resolution and merged resolution HiC matrices
         #for matrix in *${region}*${res}-norm_*correct.h5; do 
         #   hicFindTADs --matrix ${matrix} --outPrefix tads/${matrix/-norm_*correct.h5}-TADS_d_${delta}_t_${threshold} \
         #                --correctForMultipleTesting fdr --thresholdComparisons ${threshold} --delta ${delta}
         #done

         #for track in "${track_config}" "${track_config_replicate}"; do
         for track in "${track_config}"; do
            
            sed "s/-region-/-${region}-/g" ${track} > ${track%.*}_${res}_temp.ini
            sed -i "s/-binsize-/-${nbin}000-/g" ${track%.*}_${res}_temp.ini
            sed -i "s/d_delta_t_threshold/d_${delta}_t_${threshold}/g" ${track%.*}_${res}_temp.ini
            sed -i "s/-resolution-/-${res}-/g" ${track%.*}_${res}_temp.ini
        
            for target in "${delete[@]}"; do
              sed -i "/Start "${target}"/,/End "${target}"/d" ${track%.*}_${res}_temp.ini
            done

            if [ "${track}" == "${track_config_replicate}" ]; then
               plotname="tad_plots/${region}_replicate_${res}_d_${delta}_t_${threshold}.png"
            else
               plotname="tad_plots/${region}_${res}_d_${delta}_t_${threshold}.png"
            fi

            # Plot track first to identifiy max HiC value across all HiC matrices.
            hicPlotTADs --tracks ${track%.*}_${res}_temp.ini --region ${location} --outFileName "${plotname}" --dpi 300 2> ${track%.*}_${res}_plot_log_temp.txt

            # Extract max value from hicPlotTADs outut and insert to new temp track.ini file.
            max_hic_value=$(grep "max values for track" ${track%.*}_${res}_plot_log_temp.txt | awk '{print $NF}' | sort -nr | head -n 1)
            sed -i "s/#max_value = none/max_value = ${max_hic_value}/g" ${track%.*}_${res}_temp.ini
        
            # Replot the graph.
            hicPlotTADs --tracks ${track%.*}_${res}_temp.ini --region ${location} --outFileName "${plotname}" --title ${region}_delta_${delta}_threshold_${threshold} --dpi 300 

         done
      done
   done
   }
done; wait
# Remove temporary files
rm ${track%.*}_temp.ini ${track%.*}_plot_log_temp.txt

