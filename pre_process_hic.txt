#!/usr/bin/env bash

# Edit TMPDIR to ensure sufficient space (/tmp is limited on my laptop)
export TMPDIR=/home/stephen/x_am/RC-BB1219/stephen_test/tempfiles

# Raw sequence directory
raw_dir="/home/stephen/x_db/DBuck/s_richer/stephen_test/projects/hic_analysis/raw_data/"

# Reference genome download parameters
genome_url="ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz"
genome_dir="/home/stephen/x_db/DBuck/s_richer/stephen_test/genomes/GRCh38/wgs/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz"

# General parameters
qc_dir="${raw_dir%/}""/../qc_logs/"
threads="6"

# Define paths to relevant bash scripts
digest_genome="/home/stephen/h/phd/scripts2/hic_scripts/digest.py"
truncate_reads="/home/stephen/h/phd/scripts2/hic_scripts/hic_truncate.py"
split_file="/home/stephen/h/phd/scripts2/hic_scripts/split_fastq.sh"

# Bowtie2 index parameters
bt2_dir="${genome_dir%/*}""/../bt2_index/"
bt2_basename="GRCh38_primary_assembly"

# Reference genome digest parameters
digest_dir="${genome_dir%/*}""/../digest"
digest_prefix="${bt2_basename}"
re_name="Mbo1"
re_recognition="^GATC"

# Cutadapt parameters
forward_adapter="AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"
reverse_adapter="AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"
error_rate="0.1"
min_overlap="1"
gc="46"
min_length="20"
min_qual="20"

# Split FASTQ file parameters
reads_per_file="10000000"
split_reads_dir="${raw_dir}"split_reads/

mkdir -p "${genome_dir%/*}"/ "${qc_dir}" "${bt2_dir}" "${digest_dir}" "${split_fastq_dir}"

# Download GRCh38 primary assembly
curl "${genome_url}" > "${genome_dir}"

# Generate Mbo1 digest and Bowtie2 index.
"${digest_genome}" -r "${re_recognition}" -d "${genome_dir}" > "${digest_dir%*/}"/"${digest_prefix}"_"${re_name}"_digest.txt
bowtie2-build "${genome_dir}" "${bt2_dir%*/}"/"${bt2_basename}" --threads "${threads}"
bowtie2-inspect --summary "${bt2_dir%*/}"/"${bt2_basename}" > "${qc_dir%*/}"/"${bt2_basename}".bt2_index_summary.txt

### RUN FASTQC ON RAW FASTQC FILES ###
fastqc --threads ${threads} --outdir "${qc_dir}" "${raw_dir%*/}"/*R[14].*f*q*

### RUN FASTQ SCREEN ON RAW FASTQC FILES ###
fastq_screen --aligner bowtie2 --threads ${threads} --outdir "${qc_dir}" "${raw_dir%*/}"/*R[14].*f*q*

for sample in HB2_CL4-1 HB2_CL4-2 HB2_WT-1 HB2_WT-2 MCF7-1 MCF7-2; do
  cutadapt -a ${forward_adapter} -A ${reverse_adapter} \
           --error-rate ${error_rate} --overlap ${min_overlap} \
           --gc-content ${gc} --minimum-length ${min_length} \
           --quality-cutoff ${min_qual} --cores "${threads}" \
           --output "${raw_dir%*/}"/${sample}-R1-trim.fq.gz --paired-output "${raw_dir%*/}"/${sample}-R4-trim.fq.gz \
           "${raw_dir%*/}"/${sample}-R1.fastq.gz "${raw_dir%*/}"/${sample}-R4.fastq.gz > "${qc_dir%*/}"/${sample}.cutadapt.txt
done

### TRUNCATE FASTQ FILES AT HIC LIGATION JUNCTION ###
parallel -j 12 \
  "zcat {1} \
     | ${truncate_reads} --restriction ^GATC --sample {1/.} \
                       --summary truncation_summary.txt \
     | gzip > {=1 s/trim/trim-trunc/ =}" \
  ::: *-trim.fq.gz

### RUN FASTQC ON TRIMMED AND TRUNCATED FASTQ FILES ###
fastqc --threads ${threads} --outdir "${qc_dir}" "${raw_dir%*/}"/*-trim-trunc.fq.gz

### SPLIT FASTQ FILES INTO SMALLER FILES ####
split_fastq() {
  shopt -s extglob
  prefix="${3%*/}"/"${1##*/}"; prefix="${prefix%.f*q?(.gz)}".part
  zcat -f "${1}" \
    | split -l $(("${2}"*4)) --filter='gzip > "${FILE}".fq.gz' - "${prefix}"
}
export -f split_fastq
parallel -j 12 "split_fastq {1} ${reads_per_file} ${split_reads_dir}" ::: *-trim-trunc.fq.gz


